{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/exercise/exercise-create/exercise-create.component.css","webpack:///./src/app/exercise/exercise-create/exercise-create.component.html","webpack:///./src/app/exercise/exercise-create/exercise-create.component.ts","webpack:///./src/app/exercise/exercise-edit/exercise-edit.component.css","webpack:///./src/app/exercise/exercise-edit/exercise-edit.component.html","webpack:///./src/app/exercise/exercise-edit/exercise-edit.component.ts","webpack:///./src/app/exercise/exercise-list/exercise-list.component.css","webpack:///./src/app/exercise/exercise-list/exercise-list.component.html","webpack:///./src/app/exercise/exercise-list/exercise-list.component.ts","webpack:///./src/app/exercise/exercise.model.ts","webpack:///./src/app/exercise/exercise.service.ts","webpack:///./src/app/exercise/round.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACc;AACV;AACW;AAET;AAC0C;AACM;AACN;AAC3B;AAE9D,IAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,qGAAqB;QAChC,IAAI,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE;KACjC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,2GAAuB;QAClC,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;KACnC;IACD;QACE,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,qGAAqB;QAChC,IAAI,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE;KACjC;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,gBAAgB;QAC5B,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAkBF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qGAAqB;gBACrB,2GAAuB;gBACvB,qGAAqB;aACtB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;YACD,SAAS,EAAE,CAAC,0EAAe,CAAC;YAC5B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnDtB,mB;;;;;;;;;;;ACAA,43BAA43B,8Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA10B;AACA;AACT;AACI;AACS;AAOtD;IAIE,iCAAqB,OAAwB,EACxB,IAAgB,EAChB,MAAc;QAFd,YAAO,GAAP,OAAO,CAAiB;QACxB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QAJnC,aAAQ,GAAa,IAAI,wDAAQ,EAAE,CAAC;IAIG,CAAC;IAExC,0CAAQ,GAAR,cAAY,CAAC;IAEb,0CAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAChD,aAAG;YACD,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;YACnB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACzC,kDAAkD;QACpD,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF;IACH,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3C,CAAC;IAxBU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAK8B,iEAAe;YAClB,+DAAU;YACR,sDAAM;OANxB,uBAAuB,CAyBnC;IAAD,8BAAC;CAAA;AAzBmC;;;;;;;;;;;;ACXpC,mB;;;;;;;;;;;ACAA,syBAAsyB,kBAAkB,uCAAuC,eAAe,2KAA2K,eAAe,wCAAwC,eAAe,uLAAuL,eAAe,kNAAkN,2OAA2O,8Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhrD;AACL;AACN;AAEU;AACR;AACa;AAOtD;IAIE,+BAAoB,OAAwB,EACxB,MAAc,EACd,KAAqB;QAFrB,YAAO,GAAP,OAAO,CAAiB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAJzC,aAAQ,GAAa,IAAI,wDAAQ,EAAE,CAAC;IAIS,CAAC;IAE9C,wCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,OAAO,CAAC,WAAW,CACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CACjC,CAAC,SAAS,CACT,cAAI;YACF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CACF,CAAC;QACF,sDAAsD;IACxD,CAAC;IAED,6BAA6B;IAC3B,oDAAoD;IACpD,cAAc;IACd,sCAAsC;IACtC,MAAM;IACN,KAAK;IACP,IAAI;IAEJ,wCAAQ,GAAR;QACE,IAAM,KAAK,GAAU,IAAI,kDAAK,EAAE,CAAC;QACjC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;QAClC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;QAC1C,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;QAC/B,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,wCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAClD,aAAG;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC3C,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;QACF,mCAAmC;IACrC,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;IAjDU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAK6B,iEAAe;YAChB,sDAAM;YACP,8DAAc;OAN9B,qBAAqB,CAkDjC;IAAD,4BAAC;CAAA;AAlDiC;;;;;;;;;;;;ACblC,mB;;;;;;;;;;;ACAA,+SAA+S,eAAe,qBAAqB,iBAAiB,qBAAqB,wBAAwB,yV;;;;;;;;;;;;;;;;;;;;;;;;;ACA/V;AACA;AAQlD;IAIE,+BAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAE1C,wCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CACxC,cAAI;YACF,KAAI,CAAC,SAAS,GAAe,IAAI,CAAC;QACpC,CAAC,CACF,CAAC;IACJ,CAAC;IAZU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAK2B,+DAAU;OAJ1B,qBAAqB,CAajC;IAAD,4BAAC;CAAA;AAbiC;;;;;;;;;;;;;;ACPlC;AAAA;IAAA;IAMA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR0C;AACO;AAOlD;IAEE,yBAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEzC,qCAAW,GAAX,UAAa,EAAU;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,kBAAkB,GAAG,EAAE,CAAC,CAAC;QACxD,0BAA0B;QAC1B,oDAAoD;QACpD,cAAc;QACd,yBAAyB;QACzB,iCAAiC;QACjC,MAAM;QACN,KAAK;QACL,mBAAmB;IACrB,CAAC;IAED,sCAAY,GAAZ,UAAc,QAAkB;QAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,iBAAiB,EAAE,QAAQ,CAAC,CAAC;QAC7D,eAAe;QACf,aAAa;QACb,wBAAwB;QACxB,mDAAmD;QACnD,yDAAyD;QACzD,kBAAkB;QAClB,wBAAwB;QACxB,MAAM;QACN,KAAK;IACP,CAAC;IAED,wCAAc,GAAd,UAAgB,QAAkB;QAAlC,iBAQC;QAPC,IAAI,MAAM,GAAyB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,kBAAkB,GAAG,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QAEvG,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;YAC3B,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,mCAAS,GAAT,UAAW,KAAY;QACrB,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,cAAc,EAAE,KAAK,CAAC,CAAC,SAAS,CACpD,aAAG,IAAK,CAAC,EAAE,UAAC,GAAG;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IA/CU,eAAe;QAD3B,gEAAU,EAAE;yCAGgB,+DAAU;OAF1B,eAAe,CAgD3B;IAAD,sBAAC;CAAA;AAhD2B;;;;;;;;;;;;;;ACR5B;AAAA;IAAA;IAMA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACND;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ExerciseListComponent } from './exercise/exercise-list/exercise-list.component';\nimport { ExerciseCreateComponent } from './exercise/exercise-create/exercise-create.component';\nimport { ExerciseEditComponent } from './exercise/exercise-edit/exercise-edit.component';\nimport { ExerciseService } from './exercise/exercise.service';\n\nconst appRoutes: Routes = [\n  {\n    path: 'exercise-list',\n    component: ExerciseListComponent,\n    data: { title: 'Exercise list' }\n  },\n  {\n    path: 'exercise-create',\n    component: ExerciseCreateComponent,\n    data: { title: 'Exercise Create' }\n  },\n  {\n    path: 'exercise-edit/:id',\n    component: ExerciseEditComponent,\n    data: { title: 'Exercise Edit' }\n  },\n  {\n    path: '',\n    redirectTo: '/exercise-list',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExerciseListComponent,\n    ExerciseCreateComponent,\n    ExerciseEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [ExerciseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>New Exercise</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form (ngSubmit)=\\\"onSubmit()\\\" #exerciseForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"exercise.name\\\"\\n            name=\\\"name\\\"\\n            required>\\n          <label for=\\\"instruction\\\">Instruction</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"exercise.instruction\\\"\\n            name=\\\"instruction\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-success\\\"\\n            [disabled]=\\\"!exerciseForm.valid\\\"\\n            style=\\\"margin-right: 15px;\\\">\\n            Save\\n          </button>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger\\\"\\n            (click)=\\\"onCancel()\\\">\\n            Cancel\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Exercise } from '../exercise.model';\nimport { ExerciseService } from '../exercise.service';\n\n@Component({\n  selector: 'app-exercise-create',\n  templateUrl: './exercise-create.component.html',\n  styleUrls: ['./exercise-create.component.css']\n})\nexport class ExerciseCreateComponent implements OnInit {\n\n  exercise: Exercise = new Exercise();\n\n  constructor (private service: ExerciseService,\n               private http: HttpClient,\n               private router: Router) { }\n\n  ngOnInit() {}\n\n  onSubmit () {\n    this.service.saveExercise(this.exercise).subscribe(\n      res => {\n        let id = res['id'];\n        this.router.navigate(['/exercise-list']);\n        // this.router.navigate(['/exercise-detail', id]);\n      }, (err) => {\n        console.log(err);\n      }\n    )\n  }\n\n  onCancel () {\n    this.router.navigate(['/exercise-list']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Edit Exercise</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form (ngSubmit)=\\\"onSubmit()\\\" #exerciseForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Name</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"exercise.name\\\"\\n            name=\\\"name\\\"\\n            required>\\n          <label for=\\\"instruction\\\">Instruction</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"exercise.instruction\\\"\\n            name=\\\"instruction\\\">\\n        </div>\\n        <h2>Rounds</h2>\\n        <div *ngFor=\\\"let round of exercise.rounds\\\" class=\\\"form-group\\\">\\n          <h3>Round {{ round.index + 1}}</h3>\\n          <label for=\\\"repeat_{{ round.index }}\\\">Repeats</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            [(ngModel)]=\\\"round.repeat\\\"\\n            name=\\\"repeat_{{ round.index }}\\\">\\n            <label for=\\\"timeout_{{ round.index }}\\\">Timeout</label>\\n            <input\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"round.timeout\\\"\\n              name=\\\"timeout_{{ round.index }}\\\">\\n        </div>\\n        <button\\n          type=\\\"button\\\"\\n          class=\\\"btn btn-success\\\"\\n          (click)=\\\"addRound()\\\">\\n          Add Round\\n        </button>\\n        <div style=\\\"height: 5px;\\\"></div>\\n        <hr>\\n        <div class=\\\"form-group\\\">\\n          <button\\n            type=\\\"submit\\\"\\n            class=\\\"btn btn-success\\\"\\n            [disabled]=\\\"!exerciseForm.valid\\\"\\n            style=\\\"margin-right: 15px;\\\">\\n            Save\\n          </button>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger\\\"\\n            (click)=\\\"onCancel()\\\">\\n            Cancel\\n          </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Exercise } from '../exercise.model';\nimport { Round } from '../round.model';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ExerciseService } from '../exercise.service';\n\n@Component({\n  selector: 'app-exercise-edit',\n  templateUrl: './exercise-edit.component.html',\n  styleUrls: ['./exercise-edit.component.css']\n})\nexport class ExerciseEditComponent implements OnInit {\n\n  exercise: Exercise = new Exercise();\n\n  constructor(private service: ExerciseService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.service.getExercise(\n      this.route.snapshot.params['id']\n    ).subscribe(\n      data => {\n        this.exercise = data;\n      }\n    );\n    // this.getExercise(this.route.snapshot.params['id']);\n  }\n\n  // getExercise (id: number) {\n    // this.http.get('/back/exercises/' + id).subscribe(\n    //   data => {\n    //     this.exercise = <Exercise>data;\n    //   }\n    // );\n  // }\n\n  addRound () {\n    const round: Round = new Round();\n    round.exercise = this.exercise.id;\n    round.index = this.exercise.rounds.length;\n    round.repeat = round.index * 5;\n    round.timeout = round.index * 10;\n    this.exercise.rounds.push(round);\n  }\n\n  onSubmit () {\n    this.service.updateExercise(this.exercise).subscribe(\n      res => {\n        this.router.navigate(['/exercise-list']);\n      }, (err) => {\n        console.log(err);\n      }\n    );\n    // this.http.put('/back/exercise/')\n  }\n\n  onCancel () {\n    this.router.navigate(['exercise-list']);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Exercise List!</h1>\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th>ID</th>\\n        <th>Name</th>\\n        <th>Instruction</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor = \\\"let exercise of exercises\\\">\\n        <td>{{ exercise.id }}</td>\\n        <td>{{ exercise.name }}</td>\\n        <td>{{ exercise.instruction }}</td>\\n        <td>\\n          <a\\n            [routerLink]=\\\"['/exercise-edit', exercise.id]\\\"\\n            class=\\\"btn btn-primary\\\">\\n            edit\\n          </a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <a\\n    [routerLink]=\\\"['/exercise-create']\\\"\\n    class=\\\"btn btn-primary\\\">\\n    Add new exercise\\n  </a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Exercise } from '../exercise.model';\n\n@Component({\n  selector: 'app-exercise-list',\n  templateUrl: './exercise-list.component.html',\n  styleUrls: ['./exercise-list.component.css']\n})\nexport class ExerciseListComponent implements OnInit {\n\n  exercises: Exercise[];\n\n  constructor (private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get('/back/exercises').subscribe(\n      data => {\n        this.exercises = <Exercise[]>data;\n      }\n    );\n  }\n}\n","import { Round } from \"./round.model\";\r\n\r\nexport class Exercise {\r\n  id: number;\r\n  name: string;\r\n  instruction: string;\r\n  timeout: number;\r\n  rounds: Round[];\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Exercise } from \"./exercise.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Round } from \"./round.model\";\r\n\r\n\r\n@Injectable()\r\nexport class ExerciseService {\r\n\r\n  constructor (private http: HttpClient) {}\r\n\r\n  getExercise (id: number): Observable<Exercise> {\r\n    return this.http.get<Exercise>('/back/exercises/' + id);\r\n    // let exercise: Exercise;\r\n    // this.http.get('/back/exercises/' + id).subscribe(\r\n    //   data => {\r\n    //     console.log(data);\r\n    //     exercise = <Exercise>data;\r\n    //   }\r\n    // );\r\n    // return exercise;\r\n  }\r\n\r\n  saveExercise (exercise: Exercise): Observable<Exercise> {\r\n    return this.http.post<Exercise>('/back/exercises', exercise);\r\n    // .subscribe (\r\n    //   res => {\r\n    //     return res['id'];\r\n    //     // this.router.navigate(['/exercise-list']);\r\n    //     // this.router.navigate(['/exercise-detail', id]);\r\n    //   }, (err) => {\r\n    //     console.log(err);\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  updateExercise (exercise: Exercise): Observable<Exercise> {\r\n    let result: Observable<Exercise> = this.http.put<Exercise>('/back/exercises/' + exercise.id, exercise);\r\n\r\n    exercise.rounds.forEach(round => {\r\n      this.saveRound(round);\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  saveRound (round: Round) {\r\n    if (round.id == null) {\r\n      this.http.post<Round>('/back/rounds', round).subscribe(\r\n        res => {}, (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","export class Round {\r\n  id: number;\r\n  index: number;\r\n  repeat: number;\r\n  timeout: number;\r\n  exercise: number;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}